// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: proto/v1/vaccination_record.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VaccinationRecord struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DateAdministered *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_administered,json=dateAdministered,proto3" json:"date_administered,omitempty"`
	VaccineName      string                 `protobuf:"bytes,3,opt,name=vaccine_name,json=vaccineName,proto3" json:"vaccine_name,omitempty"`
	Veterinarian     string                 `protobuf:"bytes,4,opt,name=veterinarian,proto3" json:"veterinarian,omitempty"`
	Notes            string                 `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *VaccinationRecord) Reset() {
	*x = VaccinationRecord{}
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VaccinationRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VaccinationRecord) ProtoMessage() {}

func (x *VaccinationRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VaccinationRecord.ProtoReflect.Descriptor instead.
func (*VaccinationRecord) Descriptor() ([]byte, []int) {
	return file_proto_v1_vaccination_record_proto_rawDescGZIP(), []int{0}
}

func (x *VaccinationRecord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VaccinationRecord) GetDateAdministered() *timestamppb.Timestamp {
	if x != nil {
		return x.DateAdministered
	}
	return nil
}

func (x *VaccinationRecord) GetVaccineName() string {
	if x != nil {
		return x.VaccineName
	}
	return ""
}

func (x *VaccinationRecord) GetVeterinarian() string {
	if x != nil {
		return x.Veterinarian
	}
	return ""
}

func (x *VaccinationRecord) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *VaccinationRecord) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VaccinationRecord) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateVaccinationRecordRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DateAdministered *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date_administered,json=dateAdministered,proto3" json:"date_administered,omitempty"`
	VaccineName      string                 `protobuf:"bytes,2,opt,name=vaccine_name,json=vaccineName,proto3" json:"vaccine_name,omitempty"`
	Veterinarian     string                 `protobuf:"bytes,3,opt,name=veterinarian,proto3" json:"veterinarian,omitempty"`
	Notes            string                 `protobuf:"bytes,4,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreateVaccinationRecordRequest) Reset() {
	*x = CreateVaccinationRecordRequest{}
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVaccinationRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVaccinationRecordRequest) ProtoMessage() {}

func (x *CreateVaccinationRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVaccinationRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateVaccinationRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_vaccination_record_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVaccinationRecordRequest) GetDateAdministered() *timestamppb.Timestamp {
	if x != nil {
		return x.DateAdministered
	}
	return nil
}

func (x *CreateVaccinationRecordRequest) GetVaccineName() string {
	if x != nil {
		return x.VaccineName
	}
	return ""
}

func (x *CreateVaccinationRecordRequest) GetVeterinarian() string {
	if x != nil {
		return x.Veterinarian
	}
	return ""
}

func (x *CreateVaccinationRecordRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type CreateVaccinationRecordResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	VaccinationRecord *VaccinationRecord     `protobuf:"bytes,1,opt,name=vaccination_record,json=vaccinationRecord,proto3" json:"vaccination_record,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateVaccinationRecordResponse) Reset() {
	*x = CreateVaccinationRecordResponse{}
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVaccinationRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVaccinationRecordResponse) ProtoMessage() {}

func (x *CreateVaccinationRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVaccinationRecordResponse.ProtoReflect.Descriptor instead.
func (*CreateVaccinationRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_vaccination_record_proto_rawDescGZIP(), []int{2}
}

func (x *CreateVaccinationRecordResponse) GetVaccinationRecord() *VaccinationRecord {
	if x != nil {
		return x.VaccinationRecord
	}
	return nil
}

type GetVaccinationRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVaccinationRecordRequest) Reset() {
	*x = GetVaccinationRecordRequest{}
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVaccinationRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVaccinationRecordRequest) ProtoMessage() {}

func (x *GetVaccinationRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVaccinationRecordRequest.ProtoReflect.Descriptor instead.
func (*GetVaccinationRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_vaccination_record_proto_rawDescGZIP(), []int{3}
}

func (x *GetVaccinationRecordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetVaccinationRecordResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	VaccinationRecord *VaccinationRecord     `protobuf:"bytes,1,opt,name=vaccination_record,json=vaccinationRecord,proto3" json:"vaccination_record,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetVaccinationRecordResponse) Reset() {
	*x = GetVaccinationRecordResponse{}
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVaccinationRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVaccinationRecordResponse) ProtoMessage() {}

func (x *GetVaccinationRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVaccinationRecordResponse.ProtoReflect.Descriptor instead.
func (*GetVaccinationRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_vaccination_record_proto_rawDescGZIP(), []int{4}
}

func (x *GetVaccinationRecordResponse) GetVaccinationRecord() *VaccinationRecord {
	if x != nil {
		return x.VaccinationRecord
	}
	return nil
}

type UpdateVaccinationRecordRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DateAdministered *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_administered,json=dateAdministered,proto3" json:"date_administered,omitempty"`
	VaccineName      string                 `protobuf:"bytes,3,opt,name=vaccine_name,json=vaccineName,proto3" json:"vaccine_name,omitempty"`
	Veterinarian     string                 `protobuf:"bytes,4,opt,name=veterinarian,proto3" json:"veterinarian,omitempty"`
	Notes            string                 `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateVaccinationRecordRequest) Reset() {
	*x = UpdateVaccinationRecordRequest{}
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVaccinationRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVaccinationRecordRequest) ProtoMessage() {}

func (x *UpdateVaccinationRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVaccinationRecordRequest.ProtoReflect.Descriptor instead.
func (*UpdateVaccinationRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_vaccination_record_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateVaccinationRecordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateVaccinationRecordRequest) GetDateAdministered() *timestamppb.Timestamp {
	if x != nil {
		return x.DateAdministered
	}
	return nil
}

func (x *UpdateVaccinationRecordRequest) GetVaccineName() string {
	if x != nil {
		return x.VaccineName
	}
	return ""
}

func (x *UpdateVaccinationRecordRequest) GetVeterinarian() string {
	if x != nil {
		return x.Veterinarian
	}
	return ""
}

func (x *UpdateVaccinationRecordRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type UpdateVaccinationRecordResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	VaccinationRecord *VaccinationRecord     `protobuf:"bytes,1,opt,name=vaccination_record,json=vaccinationRecord,proto3" json:"vaccination_record,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateVaccinationRecordResponse) Reset() {
	*x = UpdateVaccinationRecordResponse{}
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVaccinationRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVaccinationRecordResponse) ProtoMessage() {}

func (x *UpdateVaccinationRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVaccinationRecordResponse.ProtoReflect.Descriptor instead.
func (*UpdateVaccinationRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_vaccination_record_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateVaccinationRecordResponse) GetVaccinationRecord() *VaccinationRecord {
	if x != nil {
		return x.VaccinationRecord
	}
	return nil
}

type DeleteVaccinationRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVaccinationRecordRequest) Reset() {
	*x = DeleteVaccinationRecordRequest{}
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVaccinationRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVaccinationRecordRequest) ProtoMessage() {}

func (x *DeleteVaccinationRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVaccinationRecordRequest.ProtoReflect.Descriptor instead.
func (*DeleteVaccinationRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_vaccination_record_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteVaccinationRecordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteVaccinationRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVaccinationRecordResponse) Reset() {
	*x = DeleteVaccinationRecordResponse{}
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVaccinationRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVaccinationRecordResponse) ProtoMessage() {}

func (x *DeleteVaccinationRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_vaccination_record_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVaccinationRecordResponse.ProtoReflect.Descriptor instead.
func (*DeleteVaccinationRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_vaccination_record_proto_rawDescGZIP(), []int{8}
}

var File_proto_v1_vaccination_record_proto protoreflect.FileDescriptor

var file_proto_v1_vaccination_record_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x61, 0x63, 0x63, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf,
	0x02, 0x0a, 0x11, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x61,
	0x72, 0x69, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xc6, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x76, 0x65, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x61, 0x72,
	0x69, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x6d, 0x0a, 0x1f, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x12,
	0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x11, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x2d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x56,
	0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x6a, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x56, 0x61,
	0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x76, 0x61, 0x63, 0x63, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x11, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x22, 0xd6, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61,
	0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x61, 0x72, 0x69,
	0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x74, 0x65, 0x72, 0x69,
	0x6e, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x6d, 0x0a, 0x1f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4a, 0x0a, 0x12, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x11, 0x76, 0x61, 0x63, 0x63, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x30, 0x0a, 0x1e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a,
	0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0xd1, 0x03, 0x0a, 0x18, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x61, 0x63, 0x63, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61,
	0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61,
	0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x56, 0x61, 0x63, 0x63, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x61, 0x63, 0x63, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x61, 0x67, 0x72, 0x69, 0x76, 0x61, 0x6e, 0x6e, 0x61, 0x2f, 0x61, 0x67, 0x72,
	0x69, 0x76, 0x61, 0x6e, 0x6e, 0x61, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x64, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_v1_vaccination_record_proto_rawDescOnce sync.Once
	file_proto_v1_vaccination_record_proto_rawDescData = file_proto_v1_vaccination_record_proto_rawDesc
)

func file_proto_v1_vaccination_record_proto_rawDescGZIP() []byte {
	file_proto_v1_vaccination_record_proto_rawDescOnce.Do(func() {
		file_proto_v1_vaccination_record_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_vaccination_record_proto_rawDescData)
	})
	return file_proto_v1_vaccination_record_proto_rawDescData
}

var file_proto_v1_vaccination_record_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_v1_vaccination_record_proto_goTypes = []any{
	(*VaccinationRecord)(nil),               // 0: proto.v1.VaccinationRecord
	(*CreateVaccinationRecordRequest)(nil),  // 1: proto.v1.CreateVaccinationRecordRequest
	(*CreateVaccinationRecordResponse)(nil), // 2: proto.v1.CreateVaccinationRecordResponse
	(*GetVaccinationRecordRequest)(nil),     // 3: proto.v1.GetVaccinationRecordRequest
	(*GetVaccinationRecordResponse)(nil),    // 4: proto.v1.GetVaccinationRecordResponse
	(*UpdateVaccinationRecordRequest)(nil),  // 5: proto.v1.UpdateVaccinationRecordRequest
	(*UpdateVaccinationRecordResponse)(nil), // 6: proto.v1.UpdateVaccinationRecordResponse
	(*DeleteVaccinationRecordRequest)(nil),  // 7: proto.v1.DeleteVaccinationRecordRequest
	(*DeleteVaccinationRecordResponse)(nil), // 8: proto.v1.DeleteVaccinationRecordResponse
	(*timestamppb.Timestamp)(nil),           // 9: google.protobuf.Timestamp
}
var file_proto_v1_vaccination_record_proto_depIdxs = []int32{
	9,  // 0: proto.v1.VaccinationRecord.date_administered:type_name -> google.protobuf.Timestamp
	9,  // 1: proto.v1.VaccinationRecord.created_at:type_name -> google.protobuf.Timestamp
	9,  // 2: proto.v1.VaccinationRecord.updated_at:type_name -> google.protobuf.Timestamp
	9,  // 3: proto.v1.CreateVaccinationRecordRequest.date_administered:type_name -> google.protobuf.Timestamp
	0,  // 4: proto.v1.CreateVaccinationRecordResponse.vaccination_record:type_name -> proto.v1.VaccinationRecord
	0,  // 5: proto.v1.GetVaccinationRecordResponse.vaccination_record:type_name -> proto.v1.VaccinationRecord
	9,  // 6: proto.v1.UpdateVaccinationRecordRequest.date_administered:type_name -> google.protobuf.Timestamp
	0,  // 7: proto.v1.UpdateVaccinationRecordResponse.vaccination_record:type_name -> proto.v1.VaccinationRecord
	1,  // 8: proto.v1.VaccinationRecordService.CreateVaccinationRecord:input_type -> proto.v1.CreateVaccinationRecordRequest
	3,  // 9: proto.v1.VaccinationRecordService.GetVaccinationRecord:input_type -> proto.v1.GetVaccinationRecordRequest
	5,  // 10: proto.v1.VaccinationRecordService.UpdateVaccinationRecord:input_type -> proto.v1.UpdateVaccinationRecordRequest
	7,  // 11: proto.v1.VaccinationRecordService.DeleteVaccinationRecord:input_type -> proto.v1.DeleteVaccinationRecordRequest
	2,  // 12: proto.v1.VaccinationRecordService.CreateVaccinationRecord:output_type -> proto.v1.CreateVaccinationRecordResponse
	4,  // 13: proto.v1.VaccinationRecordService.GetVaccinationRecord:output_type -> proto.v1.GetVaccinationRecordResponse
	6,  // 14: proto.v1.VaccinationRecordService.UpdateVaccinationRecord:output_type -> proto.v1.UpdateVaccinationRecordResponse
	8,  // 15: proto.v1.VaccinationRecordService.DeleteVaccinationRecord:output_type -> proto.v1.DeleteVaccinationRecordResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_v1_vaccination_record_proto_init() }
func file_proto_v1_vaccination_record_proto_init() {
	if File_proto_v1_vaccination_record_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_vaccination_record_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_vaccination_record_proto_goTypes,
		DependencyIndexes: file_proto_v1_vaccination_record_proto_depIdxs,
		MessageInfos:      file_proto_v1_vaccination_record_proto_msgTypes,
	}.Build()
	File_proto_v1_vaccination_record_proto = out.File
	file_proto_v1_vaccination_record_proto_rawDesc = nil
	file_proto_v1_vaccination_record_proto_goTypes = nil
	file_proto_v1_vaccination_record_proto_depIdxs = nil
}
