// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: proto/v1/health_record.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CheckDate     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=check_date,json=checkDate,proto3" json:"check_date,omitempty"`
	Veterinarian  string                 `protobuf:"bytes,3,opt,name=veterinarian,proto3" json:"veterinarian,omitempty"`
	Symptoms      string                 `protobuf:"bytes,4,opt,name=symptoms,proto3" json:"symptoms,omitempty"`
	Diagnosis     string                 `protobuf:"bytes,5,opt,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	Treatment     string                 `protobuf:"bytes,6,opt,name=treatment,proto3" json:"treatment,omitempty"`
	Notes         string                 `protobuf:"bytes,7,opt,name=notes,proto3" json:"notes,omitempty"`
	Photo         string                 `protobuf:"bytes,8,opt,name=photo,proto3" json:"photo,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthRecord) Reset() {
	*x = HealthRecord{}
	mi := &file_proto_v1_health_record_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRecord) ProtoMessage() {}

func (x *HealthRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_health_record_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRecord.ProtoReflect.Descriptor instead.
func (*HealthRecord) Descriptor() ([]byte, []int) {
	return file_proto_v1_health_record_proto_rawDescGZIP(), []int{0}
}

func (x *HealthRecord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HealthRecord) GetCheckDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckDate
	}
	return nil
}

func (x *HealthRecord) GetVeterinarian() string {
	if x != nil {
		return x.Veterinarian
	}
	return ""
}

func (x *HealthRecord) GetSymptoms() string {
	if x != nil {
		return x.Symptoms
	}
	return ""
}

func (x *HealthRecord) GetDiagnosis() string {
	if x != nil {
		return x.Diagnosis
	}
	return ""
}

func (x *HealthRecord) GetTreatment() string {
	if x != nil {
		return x.Treatment
	}
	return ""
}

func (x *HealthRecord) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *HealthRecord) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *HealthRecord) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *HealthRecord) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateHealthRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CheckDate     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=check_date,json=checkDate,proto3" json:"check_date,omitempty"`
	Veterinarian  string                 `protobuf:"bytes,2,opt,name=veterinarian,proto3" json:"veterinarian,omitempty"`
	Symptoms      string                 `protobuf:"bytes,3,opt,name=symptoms,proto3" json:"symptoms,omitempty"`
	Diagnosis     string                 `protobuf:"bytes,4,opt,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	Treatment     string                 `protobuf:"bytes,5,opt,name=treatment,proto3" json:"treatment,omitempty"`
	Notes         string                 `protobuf:"bytes,6,opt,name=notes,proto3" json:"notes,omitempty"`
	Photo         string                 `protobuf:"bytes,7,opt,name=photo,proto3" json:"photo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateHealthRecordRequest) Reset() {
	*x = CreateHealthRecordRequest{}
	mi := &file_proto_v1_health_record_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateHealthRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHealthRecordRequest) ProtoMessage() {}

func (x *CreateHealthRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_health_record_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHealthRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateHealthRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_health_record_proto_rawDescGZIP(), []int{1}
}

func (x *CreateHealthRecordRequest) GetCheckDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckDate
	}
	return nil
}

func (x *CreateHealthRecordRequest) GetVeterinarian() string {
	if x != nil {
		return x.Veterinarian
	}
	return ""
}

func (x *CreateHealthRecordRequest) GetSymptoms() string {
	if x != nil {
		return x.Symptoms
	}
	return ""
}

func (x *CreateHealthRecordRequest) GetDiagnosis() string {
	if x != nil {
		return x.Diagnosis
	}
	return ""
}

func (x *CreateHealthRecordRequest) GetTreatment() string {
	if x != nil {
		return x.Treatment
	}
	return ""
}

func (x *CreateHealthRecordRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *CreateHealthRecordRequest) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

type CreateHealthRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HealthRecord  *HealthRecord          `protobuf:"bytes,1,opt,name=health_record,json=healthRecord,proto3" json:"health_record,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateHealthRecordResponse) Reset() {
	*x = CreateHealthRecordResponse{}
	mi := &file_proto_v1_health_record_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateHealthRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHealthRecordResponse) ProtoMessage() {}

func (x *CreateHealthRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_health_record_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHealthRecordResponse.ProtoReflect.Descriptor instead.
func (*CreateHealthRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_health_record_proto_rawDescGZIP(), []int{2}
}

func (x *CreateHealthRecordResponse) GetHealthRecord() *HealthRecord {
	if x != nil {
		return x.HealthRecord
	}
	return nil
}

type GetHealthRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHealthRecordRequest) Reset() {
	*x = GetHealthRecordRequest{}
	mi := &file_proto_v1_health_record_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHealthRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthRecordRequest) ProtoMessage() {}

func (x *GetHealthRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_health_record_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthRecordRequest.ProtoReflect.Descriptor instead.
func (*GetHealthRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_health_record_proto_rawDescGZIP(), []int{3}
}

func (x *GetHealthRecordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetHealthRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HealthRecord  *HealthRecord          `protobuf:"bytes,1,opt,name=health_record,json=healthRecord,proto3" json:"health_record,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHealthRecordResponse) Reset() {
	*x = GetHealthRecordResponse{}
	mi := &file_proto_v1_health_record_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHealthRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHealthRecordResponse) ProtoMessage() {}

func (x *GetHealthRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_health_record_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHealthRecordResponse.ProtoReflect.Descriptor instead.
func (*GetHealthRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_health_record_proto_rawDescGZIP(), []int{4}
}

func (x *GetHealthRecordResponse) GetHealthRecord() *HealthRecord {
	if x != nil {
		return x.HealthRecord
	}
	return nil
}

type UpdateHealthRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CheckDate     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=check_date,json=checkDate,proto3" json:"check_date,omitempty"`
	Veterinarian  string                 `protobuf:"bytes,3,opt,name=veterinarian,proto3" json:"veterinarian,omitempty"`
	Symptoms      string                 `protobuf:"bytes,4,opt,name=symptoms,proto3" json:"symptoms,omitempty"`
	Diagnosis     string                 `protobuf:"bytes,5,opt,name=diagnosis,proto3" json:"diagnosis,omitempty"`
	Treatment     string                 `protobuf:"bytes,6,opt,name=treatment,proto3" json:"treatment,omitempty"`
	Notes         string                 `protobuf:"bytes,7,opt,name=notes,proto3" json:"notes,omitempty"`
	Photo         string                 `protobuf:"bytes,8,opt,name=photo,proto3" json:"photo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateHealthRecordRequest) Reset() {
	*x = UpdateHealthRecordRequest{}
	mi := &file_proto_v1_health_record_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateHealthRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHealthRecordRequest) ProtoMessage() {}

func (x *UpdateHealthRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_health_record_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHealthRecordRequest.ProtoReflect.Descriptor instead.
func (*UpdateHealthRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_health_record_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateHealthRecordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateHealthRecordRequest) GetCheckDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckDate
	}
	return nil
}

func (x *UpdateHealthRecordRequest) GetVeterinarian() string {
	if x != nil {
		return x.Veterinarian
	}
	return ""
}

func (x *UpdateHealthRecordRequest) GetSymptoms() string {
	if x != nil {
		return x.Symptoms
	}
	return ""
}

func (x *UpdateHealthRecordRequest) GetDiagnosis() string {
	if x != nil {
		return x.Diagnosis
	}
	return ""
}

func (x *UpdateHealthRecordRequest) GetTreatment() string {
	if x != nil {
		return x.Treatment
	}
	return ""
}

func (x *UpdateHealthRecordRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *UpdateHealthRecordRequest) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

type UpdateHealthRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HealthRecord  *HealthRecord          `protobuf:"bytes,1,opt,name=health_record,json=healthRecord,proto3" json:"health_record,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateHealthRecordResponse) Reset() {
	*x = UpdateHealthRecordResponse{}
	mi := &file_proto_v1_health_record_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateHealthRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHealthRecordResponse) ProtoMessage() {}

func (x *UpdateHealthRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_health_record_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHealthRecordResponse.ProtoReflect.Descriptor instead.
func (*UpdateHealthRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_health_record_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateHealthRecordResponse) GetHealthRecord() *HealthRecord {
	if x != nil {
		return x.HealthRecord
	}
	return nil
}

type DeleteHealthRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteHealthRecordRequest) Reset() {
	*x = DeleteHealthRecordRequest{}
	mi := &file_proto_v1_health_record_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteHealthRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHealthRecordRequest) ProtoMessage() {}

func (x *DeleteHealthRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_health_record_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHealthRecordRequest.ProtoReflect.Descriptor instead.
func (*DeleteHealthRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_health_record_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteHealthRecordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteHealthRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteHealthRecordResponse) Reset() {
	*x = DeleteHealthRecordResponse{}
	mi := &file_proto_v1_health_record_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteHealthRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHealthRecordResponse) ProtoMessage() {}

func (x *DeleteHealthRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_health_record_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHealthRecordResponse.ProtoReflect.Descriptor instead.
func (*DeleteHealthRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_health_record_proto_rawDescGZIP(), []int{8}
}

var File_proto_v1_health_record_proto protoreflect.FileDescriptor

var file_proto_v1_health_record_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf7, 0x02, 0x0a, 0x0c, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x74, 0x65, 0x72, 0x69, 0x6e,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x74,
	0x65, 0x72, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6d,
	0x70, 0x74, 0x6f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d,
	0x70, 0x74, 0x6f, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73,
	0x69, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x69, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xfe, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x76, 0x65, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x61, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72,
	0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x72, 0x65, 0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x22, 0x59, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22,
	0x28, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x17, 0x47, 0x65, 0x74,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x22, 0x8e, 0x02, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65,
	0x74, 0x65, 0x72, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x76, 0x65, 0x74, 0x65, 0x72, 0x69, 0x6e, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x79, 0x6d, 0x70, 0x74, 0x6f, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x69, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x65, 0x61,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x65,
	0x61, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x22, 0x59, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x2b, 0x0a,
	0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x90, 0x03, 0x0a, 0x13, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x5f, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x56, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x67, 0x72, 0x69, 0x76, 0x61,
	0x6e, 0x6e, 0x61, 0x2f, 0x61, 0x67, 0x72, 0x69, 0x76, 0x61, 0x6e, 0x6e, 0x61, 0x2d, 0x67, 0x72,
	0x70, 0x63, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_v1_health_record_proto_rawDescOnce sync.Once
	file_proto_v1_health_record_proto_rawDescData = file_proto_v1_health_record_proto_rawDesc
)

func file_proto_v1_health_record_proto_rawDescGZIP() []byte {
	file_proto_v1_health_record_proto_rawDescOnce.Do(func() {
		file_proto_v1_health_record_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_v1_health_record_proto_rawDescData)
	})
	return file_proto_v1_health_record_proto_rawDescData
}

var file_proto_v1_health_record_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_v1_health_record_proto_goTypes = []any{
	(*HealthRecord)(nil),               // 0: proto.v1.HealthRecord
	(*CreateHealthRecordRequest)(nil),  // 1: proto.v1.CreateHealthRecordRequest
	(*CreateHealthRecordResponse)(nil), // 2: proto.v1.CreateHealthRecordResponse
	(*GetHealthRecordRequest)(nil),     // 3: proto.v1.GetHealthRecordRequest
	(*GetHealthRecordResponse)(nil),    // 4: proto.v1.GetHealthRecordResponse
	(*UpdateHealthRecordRequest)(nil),  // 5: proto.v1.UpdateHealthRecordRequest
	(*UpdateHealthRecordResponse)(nil), // 6: proto.v1.UpdateHealthRecordResponse
	(*DeleteHealthRecordRequest)(nil),  // 7: proto.v1.DeleteHealthRecordRequest
	(*DeleteHealthRecordResponse)(nil), // 8: proto.v1.DeleteHealthRecordResponse
	(*timestamppb.Timestamp)(nil),      // 9: google.protobuf.Timestamp
}
var file_proto_v1_health_record_proto_depIdxs = []int32{
	9,  // 0: proto.v1.HealthRecord.check_date:type_name -> google.protobuf.Timestamp
	9,  // 1: proto.v1.HealthRecord.created_at:type_name -> google.protobuf.Timestamp
	9,  // 2: proto.v1.HealthRecord.updated_at:type_name -> google.protobuf.Timestamp
	9,  // 3: proto.v1.CreateHealthRecordRequest.check_date:type_name -> google.protobuf.Timestamp
	0,  // 4: proto.v1.CreateHealthRecordResponse.health_record:type_name -> proto.v1.HealthRecord
	0,  // 5: proto.v1.GetHealthRecordResponse.health_record:type_name -> proto.v1.HealthRecord
	9,  // 6: proto.v1.UpdateHealthRecordRequest.check_date:type_name -> google.protobuf.Timestamp
	0,  // 7: proto.v1.UpdateHealthRecordResponse.health_record:type_name -> proto.v1.HealthRecord
	1,  // 8: proto.v1.HealthRecordService.CreateHealthRecord:input_type -> proto.v1.CreateHealthRecordRequest
	3,  // 9: proto.v1.HealthRecordService.GetHealthRecord:input_type -> proto.v1.GetHealthRecordRequest
	5,  // 10: proto.v1.HealthRecordService.UpdateHealthRecord:input_type -> proto.v1.UpdateHealthRecordRequest
	7,  // 11: proto.v1.HealthRecordService.DeleteHealthRecord:input_type -> proto.v1.DeleteHealthRecordRequest
	2,  // 12: proto.v1.HealthRecordService.CreateHealthRecord:output_type -> proto.v1.CreateHealthRecordResponse
	4,  // 13: proto.v1.HealthRecordService.GetHealthRecord:output_type -> proto.v1.GetHealthRecordResponse
	6,  // 14: proto.v1.HealthRecordService.UpdateHealthRecord:output_type -> proto.v1.UpdateHealthRecordResponse
	8,  // 15: proto.v1.HealthRecordService.DeleteHealthRecord:output_type -> proto.v1.DeleteHealthRecordResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_v1_health_record_proto_init() }
func file_proto_v1_health_record_proto_init() {
	if File_proto_v1_health_record_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_v1_health_record_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_health_record_proto_goTypes,
		DependencyIndexes: file_proto_v1_health_record_proto_depIdxs,
		MessageInfos:      file_proto_v1_health_record_proto_msgTypes,
	}.Build()
	File_proto_v1_health_record_proto = out.File
	file_proto_v1_health_record_proto_rawDesc = nil
	file_proto_v1_health_record_proto_goTypes = nil
	file_proto_v1_health_record_proto_depIdxs = nil
}
