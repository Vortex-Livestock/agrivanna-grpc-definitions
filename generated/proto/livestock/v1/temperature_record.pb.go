// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: proto/livestock/v1/temperature_record.proto

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TemperatureRecordUnit int32

const (
	TemperatureRecordUnit_TEMPERATURE_RECORD_UNIT_UNSPECIFIED TemperatureRecordUnit = 0
	TemperatureRecordUnit_TEMPERATURE_RECORD_UNIT_CELSIUS     TemperatureRecordUnit = 1
	TemperatureRecordUnit_TEMPERATURE_RECORD_UNIT_FAHRENHEIT  TemperatureRecordUnit = 2
)

// Enum value maps for TemperatureRecordUnit.
var (
	TemperatureRecordUnit_name = map[int32]string{
		0: "TEMPERATURE_RECORD_UNIT_UNSPECIFIED",
		1: "TEMPERATURE_RECORD_UNIT_CELSIUS",
		2: "TEMPERATURE_RECORD_UNIT_FAHRENHEIT",
	}
	TemperatureRecordUnit_value = map[string]int32{
		"TEMPERATURE_RECORD_UNIT_UNSPECIFIED": 0,
		"TEMPERATURE_RECORD_UNIT_CELSIUS":     1,
		"TEMPERATURE_RECORD_UNIT_FAHRENHEIT":  2,
	}
)

func (x TemperatureRecordUnit) Enum() *TemperatureRecordUnit {
	p := new(TemperatureRecordUnit)
	*p = x
	return p
}

func (x TemperatureRecordUnit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TemperatureRecordUnit) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_livestock_v1_temperature_record_proto_enumTypes[0].Descriptor()
}

func (TemperatureRecordUnit) Type() protoreflect.EnumType {
	return &file_proto_livestock_v1_temperature_record_proto_enumTypes[0]
}

func (x TemperatureRecordUnit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TemperatureRecordUnit.Descriptor instead.
func (TemperatureRecordUnit) EnumDescriptor() ([]byte, []int) {
	return file_proto_livestock_v1_temperature_record_proto_rawDescGZIP(), []int{0}
}

type TemperatureRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LivestockId   string                 `protobuf:"bytes,2,opt,name=livestock_id,json=livestockId,proto3" json:"livestock_id,omitempty"`
	RecordedAt    string                 `protobuf:"bytes,3,opt,name=recorded_at,json=recordedAt,proto3" json:"recorded_at,omitempty"`
	Temperature   float32                `protobuf:"fixed32,4,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Unit          TemperatureRecordUnit  `protobuf:"varint,5,opt,name=unit,proto3,enum=v1.TemperatureRecordUnit" json:"unit,omitempty"`
	Notes         string                 `protobuf:"bytes,6,opt,name=notes,proto3" json:"notes,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TemperatureRecord) Reset() {
	*x = TemperatureRecord{}
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemperatureRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemperatureRecord) ProtoMessage() {}

func (x *TemperatureRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemperatureRecord.ProtoReflect.Descriptor instead.
func (*TemperatureRecord) Descriptor() ([]byte, []int) {
	return file_proto_livestock_v1_temperature_record_proto_rawDescGZIP(), []int{0}
}

func (x *TemperatureRecord) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TemperatureRecord) GetLivestockId() string {
	if x != nil {
		return x.LivestockId
	}
	return ""
}

func (x *TemperatureRecord) GetRecordedAt() string {
	if x != nil {
		return x.RecordedAt
	}
	return ""
}

func (x *TemperatureRecord) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *TemperatureRecord) GetUnit() TemperatureRecordUnit {
	if x != nil {
		return x.Unit
	}
	return TemperatureRecordUnit_TEMPERATURE_RECORD_UNIT_UNSPECIFIED
}

func (x *TemperatureRecord) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *TemperatureRecord) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TemperatureRecord) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CreateTemperatureRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LivestockId   string                 `protobuf:"bytes,1,opt,name=livestock_id,json=livestockId,proto3" json:"livestock_id,omitempty"`
	RecordedAt    string                 `protobuf:"bytes,2,opt,name=recorded_at,json=recordedAt,proto3" json:"recorded_at,omitempty"`
	Temperature   float32                `protobuf:"fixed32,3,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Unit          TemperatureRecordUnit  `protobuf:"varint,4,opt,name=unit,proto3,enum=v1.TemperatureRecordUnit" json:"unit,omitempty"`
	Notes         string                 `protobuf:"bytes,5,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTemperatureRecordRequest) Reset() {
	*x = CreateTemperatureRecordRequest{}
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTemperatureRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemperatureRecordRequest) ProtoMessage() {}

func (x *CreateTemperatureRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemperatureRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateTemperatureRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_livestock_v1_temperature_record_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTemperatureRecordRequest) GetLivestockId() string {
	if x != nil {
		return x.LivestockId
	}
	return ""
}

func (x *CreateTemperatureRecordRequest) GetRecordedAt() string {
	if x != nil {
		return x.RecordedAt
	}
	return ""
}

func (x *CreateTemperatureRecordRequest) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *CreateTemperatureRecordRequest) GetUnit() TemperatureRecordUnit {
	if x != nil {
		return x.Unit
	}
	return TemperatureRecordUnit_TEMPERATURE_RECORD_UNIT_UNSPECIFIED
}

func (x *CreateTemperatureRecordRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type CreateTemperatureRecordResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TemperatureRecord *TemperatureRecord     `protobuf:"bytes,1,opt,name=temperature_record,json=temperatureRecord,proto3" json:"temperature_record,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateTemperatureRecordResponse) Reset() {
	*x = CreateTemperatureRecordResponse{}
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTemperatureRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTemperatureRecordResponse) ProtoMessage() {}

func (x *CreateTemperatureRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTemperatureRecordResponse.ProtoReflect.Descriptor instead.
func (*CreateTemperatureRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_livestock_v1_temperature_record_proto_rawDescGZIP(), []int{2}
}

func (x *CreateTemperatureRecordResponse) GetTemperatureRecord() *TemperatureRecord {
	if x != nil {
		return x.TemperatureRecord
	}
	return nil
}

type GetTemperatureRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTemperatureRecordRequest) Reset() {
	*x = GetTemperatureRecordRequest{}
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTemperatureRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemperatureRecordRequest) ProtoMessage() {}

func (x *GetTemperatureRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemperatureRecordRequest.ProtoReflect.Descriptor instead.
func (*GetTemperatureRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_livestock_v1_temperature_record_proto_rawDescGZIP(), []int{3}
}

func (x *GetTemperatureRecordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTemperatureRecordResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TemperatureRecord *TemperatureRecord     `protobuf:"bytes,1,opt,name=temperature_record,json=temperatureRecord,proto3" json:"temperature_record,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetTemperatureRecordResponse) Reset() {
	*x = GetTemperatureRecordResponse{}
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTemperatureRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemperatureRecordResponse) ProtoMessage() {}

func (x *GetTemperatureRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemperatureRecordResponse.ProtoReflect.Descriptor instead.
func (*GetTemperatureRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_livestock_v1_temperature_record_proto_rawDescGZIP(), []int{4}
}

func (x *GetTemperatureRecordResponse) GetTemperatureRecord() *TemperatureRecord {
	if x != nil {
		return x.TemperatureRecord
	}
	return nil
}

type UpdateTemperatureRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	LivestockId   string                 `protobuf:"bytes,2,opt,name=livestock_id,json=livestockId,proto3" json:"livestock_id,omitempty"`
	RecordedAt    string                 `protobuf:"bytes,3,opt,name=recorded_at,json=recordedAt,proto3" json:"recorded_at,omitempty"`
	Temperature   float32                `protobuf:"fixed32,4,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Unit          TemperatureRecordUnit  `protobuf:"varint,5,opt,name=unit,proto3,enum=v1.TemperatureRecordUnit" json:"unit,omitempty"`
	Notes         string                 `protobuf:"bytes,6,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTemperatureRecordRequest) Reset() {
	*x = UpdateTemperatureRecordRequest{}
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTemperatureRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemperatureRecordRequest) ProtoMessage() {}

func (x *UpdateTemperatureRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemperatureRecordRequest.ProtoReflect.Descriptor instead.
func (*UpdateTemperatureRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_livestock_v1_temperature_record_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateTemperatureRecordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTemperatureRecordRequest) GetLivestockId() string {
	if x != nil {
		return x.LivestockId
	}
	return ""
}

func (x *UpdateTemperatureRecordRequest) GetRecordedAt() string {
	if x != nil {
		return x.RecordedAt
	}
	return ""
}

func (x *UpdateTemperatureRecordRequest) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *UpdateTemperatureRecordRequest) GetUnit() TemperatureRecordUnit {
	if x != nil {
		return x.Unit
	}
	return TemperatureRecordUnit_TEMPERATURE_RECORD_UNIT_UNSPECIFIED
}

func (x *UpdateTemperatureRecordRequest) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type UpdateTemperatureRecordResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TemperatureRecord *TemperatureRecord     `protobuf:"bytes,1,opt,name=temperature_record,json=temperatureRecord,proto3" json:"temperature_record,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateTemperatureRecordResponse) Reset() {
	*x = UpdateTemperatureRecordResponse{}
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTemperatureRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTemperatureRecordResponse) ProtoMessage() {}

func (x *UpdateTemperatureRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTemperatureRecordResponse.ProtoReflect.Descriptor instead.
func (*UpdateTemperatureRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_livestock_v1_temperature_record_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateTemperatureRecordResponse) GetTemperatureRecord() *TemperatureRecord {
	if x != nil {
		return x.TemperatureRecord
	}
	return nil
}

type DeleteTemperatureRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTemperatureRecordRequest) Reset() {
	*x = DeleteTemperatureRecordRequest{}
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTemperatureRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemperatureRecordRequest) ProtoMessage() {}

func (x *DeleteTemperatureRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemperatureRecordRequest.ProtoReflect.Descriptor instead.
func (*DeleteTemperatureRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_livestock_v1_temperature_record_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteTemperatureRecordRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteTemperatureRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTemperatureRecordResponse) Reset() {
	*x = DeleteTemperatureRecordResponse{}
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTemperatureRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTemperatureRecordResponse) ProtoMessage() {}

func (x *DeleteTemperatureRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_livestock_v1_temperature_record_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTemperatureRecordResponse.ProtoReflect.Descriptor instead.
func (*DeleteTemperatureRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_livestock_v1_temperature_record_proto_rawDescGZIP(), []int{8}
}

var File_proto_livestock_v1_temperature_record_proto protoreflect.FileDescriptor

var file_proto_livestock_v1_temperature_record_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76,
	0x31, 0x22, 0x8c, 0x02, 0x0a, 0x11, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c,
	0x69, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2d, 0x0a,
	0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74,
	0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0xcb, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x6e,
	0x69, 0x74, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x67,
	0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x44, 0x0a, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0x2d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x64, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x22, 0xdb, 0x01, 0x0a,
	0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x69, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x69, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04,
	0x75, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x1f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x12, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x22, 0x30, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x1f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x8d, 0x01, 0x0a, 0x15, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x6e,
	0x69, 0x74, 0x12, 0x27, 0x0a, 0x23, 0x54, 0x45, 0x4d, 0x50, 0x45, 0x52, 0x41, 0x54, 0x55, 0x52,
	0x45, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x1f, 0x54,
	0x45, 0x4d, 0x50, 0x45, 0x52, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52,
	0x44, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x43, 0x45, 0x4c, 0x53, 0x49, 0x55, 0x53, 0x10, 0x01,
	0x12, 0x26, 0x0a, 0x22, 0x54, 0x45, 0x4d, 0x50, 0x45, 0x52, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f,
	0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x5f, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x46, 0x41, 0x48, 0x52,
	0x45, 0x4e, 0x48, 0x45, 0x49, 0x54, 0x10, 0x02, 0x32, 0xa1, 0x03, 0x0a, 0x18, 0x54, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x1f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x22, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x22, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3b, 0x5a, 0x39,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x67, 0x72, 0x69, 0x76,
	0x61, 0x6e, 0x6e, 0x61, 0x2f, 0x61, 0x67, 0x72, 0x69, 0x76, 0x61, 0x6e, 0x6e, 0x61, 0x2d, 0x67,
	0x72, 0x70, 0x63, 0x2d, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_livestock_v1_temperature_record_proto_rawDescOnce sync.Once
	file_proto_livestock_v1_temperature_record_proto_rawDescData = file_proto_livestock_v1_temperature_record_proto_rawDesc
)

func file_proto_livestock_v1_temperature_record_proto_rawDescGZIP() []byte {
	file_proto_livestock_v1_temperature_record_proto_rawDescOnce.Do(func() {
		file_proto_livestock_v1_temperature_record_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_livestock_v1_temperature_record_proto_rawDescData)
	})
	return file_proto_livestock_v1_temperature_record_proto_rawDescData
}

var file_proto_livestock_v1_temperature_record_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_livestock_v1_temperature_record_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_livestock_v1_temperature_record_proto_goTypes = []any{
	(TemperatureRecordUnit)(0),              // 0: v1.TemperatureRecordUnit
	(*TemperatureRecord)(nil),               // 1: v1.TemperatureRecord
	(*CreateTemperatureRecordRequest)(nil),  // 2: v1.CreateTemperatureRecordRequest
	(*CreateTemperatureRecordResponse)(nil), // 3: v1.CreateTemperatureRecordResponse
	(*GetTemperatureRecordRequest)(nil),     // 4: v1.GetTemperatureRecordRequest
	(*GetTemperatureRecordResponse)(nil),    // 5: v1.GetTemperatureRecordResponse
	(*UpdateTemperatureRecordRequest)(nil),  // 6: v1.UpdateTemperatureRecordRequest
	(*UpdateTemperatureRecordResponse)(nil), // 7: v1.UpdateTemperatureRecordResponse
	(*DeleteTemperatureRecordRequest)(nil),  // 8: v1.DeleteTemperatureRecordRequest
	(*DeleteTemperatureRecordResponse)(nil), // 9: v1.DeleteTemperatureRecordResponse
}
var file_proto_livestock_v1_temperature_record_proto_depIdxs = []int32{
	0,  // 0: v1.TemperatureRecord.unit:type_name -> v1.TemperatureRecordUnit
	0,  // 1: v1.CreateTemperatureRecordRequest.unit:type_name -> v1.TemperatureRecordUnit
	1,  // 2: v1.CreateTemperatureRecordResponse.temperature_record:type_name -> v1.TemperatureRecord
	1,  // 3: v1.GetTemperatureRecordResponse.temperature_record:type_name -> v1.TemperatureRecord
	0,  // 4: v1.UpdateTemperatureRecordRequest.unit:type_name -> v1.TemperatureRecordUnit
	1,  // 5: v1.UpdateTemperatureRecordResponse.temperature_record:type_name -> v1.TemperatureRecord
	2,  // 6: v1.TemperatureRecordService.CreateTemperatureRecord:input_type -> v1.CreateTemperatureRecordRequest
	4,  // 7: v1.TemperatureRecordService.GetTemperatureRecord:input_type -> v1.GetTemperatureRecordRequest
	6,  // 8: v1.TemperatureRecordService.UpdateTemperatureRecord:input_type -> v1.UpdateTemperatureRecordRequest
	8,  // 9: v1.TemperatureRecordService.DeleteTemperatureRecord:input_type -> v1.DeleteTemperatureRecordRequest
	3,  // 10: v1.TemperatureRecordService.CreateTemperatureRecord:output_type -> v1.CreateTemperatureRecordResponse
	5,  // 11: v1.TemperatureRecordService.GetTemperatureRecord:output_type -> v1.GetTemperatureRecordResponse
	7,  // 12: v1.TemperatureRecordService.UpdateTemperatureRecord:output_type -> v1.UpdateTemperatureRecordResponse
	9,  // 13: v1.TemperatureRecordService.DeleteTemperatureRecord:output_type -> v1.DeleteTemperatureRecordResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_livestock_v1_temperature_record_proto_init() }
func file_proto_livestock_v1_temperature_record_proto_init() {
	if File_proto_livestock_v1_temperature_record_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_livestock_v1_temperature_record_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_livestock_v1_temperature_record_proto_goTypes,
		DependencyIndexes: file_proto_livestock_v1_temperature_record_proto_depIdxs,
		EnumInfos:         file_proto_livestock_v1_temperature_record_proto_enumTypes,
		MessageInfos:      file_proto_livestock_v1_temperature_record_proto_msgTypes,
	}.Build()
	File_proto_livestock_v1_temperature_record_proto = out.File
	file_proto_livestock_v1_temperature_record_proto_rawDesc = nil
	file_proto_livestock_v1_temperature_record_proto_goTypes = nil
	file_proto_livestock_v1_temperature_record_proto_depIdxs = nil
}
