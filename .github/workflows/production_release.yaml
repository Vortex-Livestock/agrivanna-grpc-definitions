name: Production Release Workflow

on:
  workflow_dispatch:
    inputs:
      bump_type:
        type: choice
        description: "Specify the type of version bump: major, minor, or patch"
        options:
          - major
          - minor
          - patch
        default: patch

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: devel # Work on the 'devel' branch

      - name: Install Protoc
        uses: arduino/setup-protoc@v3

      - name: Install Buf CLI
        uses: bufbuild/buf-setup-action@v1

      - name: Install Go dependencies
        run: make install

      - name: Generate Go stubs from proto files
        run: make proto

      - name: Lint the proto files
        run: buf lint

      - name: Extract current version
        id: version
        run: |
          current_version=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "current_version=$current_version" >> $GITHUB_ENV

      - name: Calculate next version
        id: next_version
        run: |
          bump_type="${{ github.event.inputs.bump_type }}"
          current_version="${{ env.current_version }}"

          # Remove the leading 'v' to parse
          raw_version="${current_version#v}"

          major=$(echo "$raw_version" | cut -d. -f1)
          minor=$(echo "$raw_version" | cut -d. -f2)
          patch=$(echo "$raw_version" | cut -d. -f3)

          if [ "$bump_type" == "major" ]; then
            major=$((major + 1))
            minor=0
            patch=0
          elif [ "$bump_type" == "minor" ]; then
            minor=$((minor + 1))
            patch=0
          else
            patch=$((patch + 1))
          fi

          next_version="v$major.$minor.$patch"
          echo "next_version=$next_version" >> $GITHUB_ENV
          echo "Next version: $next_version"

      - name: Create tag and push
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag ${{ env.next_version }}
          git push origin ${{ env.next_version }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.next_version }}
          release_name: Release ${{ env.next_version }}
          body: "Auto-generated release for ${{ env.next_version }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release PR
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: main
          head: devel
          title: "Bump version to ${{ env.next_version }}"

      - name: Merge the release PR
        if: steps.cpr.outputs.pull-request-number != ''
        uses: peter-evans/merge-pull-request@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash
